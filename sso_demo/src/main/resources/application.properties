spring.application.name=sso_demo

server.port=9000

spring.datasource.username=root
spring.datasource.password=12345678
#neu khong co schema tu tao
spring.datasource.url=jdbc:mysql://localhost:3306/sso_demo?createDatabaseIfNotExist=true&useUnicode=yes&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true

spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#tu gen bang theo code, co the update them cot (nhung khong xoa di cai co san)
spring.jpa.generate-ddl=true
#show cau lenh sql len man hinh console
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto = update

spring.security.oauth2.authorizationserver.issuer=http://localhost:9000

spring.security.oauth2.authorizationserver.client.articles-client.registration.client-id=articles-client
spring.security.oauth2.authorizationserver.client.articles-client.registration.client-secret={noop}secret
spring.security.oauth2.authorizationserver.client.articles-client.registration.client-name=Articles Client
spring.security.oauth2.authorizationserver.client.articles-client.registration.client-authentication-methods[0]=client_secret_basic
spring.security.oauth2.authorizationserver.client.articles-client.registration.authorization-grant-types[0]=authorization_code
spring.security.oauth2.authorizationserver.client.articles-client.registration.authorization-grant-types[1]=refresh_token
spring.security.oauth2.authorizationserver.client.articles-client.registration.redirect-uris[0]=http://127.0.0.1:8080/login/oauth2/code/articles-client-oidc
spring.security.oauth2.authorizationserver.client.articles-client.registration.redirect-uris[1]=http://127.0.0.1:8080/authorized
spring.security.oauth2.authorizationserver.client.articles-client.registration.scopes[0]=openid
spring.security.oauth2.authorizationserver.client.articles-client.registration.scopes[1]=articles.read

